{"version":3,"sources":["../components/Button/button.tsx","../components/Button/index.tsx","../components/Card/index.tsx","../components/Card/card.tsx","pages/home/index.tsx","components/MarkDown/Code.tsx","components/MarkDown/index.tsx","components/Slider/index.tsx","site.config.ts","pages/component/index.tsx","components/Layout/index.tsx","App.tsx","serviceWorker.ts","index.tsx","../README.md"],"names":["Button","props","children","className","disabled","href","size","type","restProps","classes","classnames","defaultProps","Card","title","Home","to","Code","containerId","document","source","parseInt","Math","random","toString","this","renderSource","codeMd","value","replace","args","transform","presets","plugins","code","argv","React","ReactDOM","zbui","Function","id","Component","CodeBlock","components","nodeList","Map","state","html","SyntaxHighlighter","registerLanguage","jsx","javascript","clear","set","createElement","setState","renderDOM","component","div","getElementById","push","HTMLElement","render","language","dangerouslySetInnerHTML","__html","style","coy","Slider","menus","renderMenus","map","item","key","name","description","documents","basicComponents","module","LazyComponent","useState","md","setMd","loadable","route","load","then","default","renderers","routes","setRoutes","length","renderRoutes","configs","siteConfig","routeKyes","Object","keys","forEach","Array","isArray","concat","path","home","Layout","target","rel","App","exact","Components","Boolean","window","location","hostname","match","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"gUAqBMA,EAA0B,SAACC,GAAW,IAAD,EAEvCC,EAOED,EAPFC,SACAC,EAMEF,EANFE,UACAC,EAKEH,EALFG,SACAC,EAIEJ,EAJFI,KACAC,EAGEL,EAHFK,KACAC,EAEEN,EAFFM,KACGC,EARoC,YASrCP,EATqC,0DAUnCQ,EAAUC,IAAW,MAAOP,GAAR,iCAChBI,GAASA,GADO,4BAEhBD,GAASA,GAFO,cAGxB,WAAsB,SAATC,GAAoBH,GAHT,IAK1B,MAAa,SAATG,GAAmBF,EAErB,qCACEF,UAAWM,EACXJ,KAAMA,GACFG,GAEHN,GAIH,0CACEC,UAAWM,EACXL,SAAUA,GACNI,GAEHN,IAKPF,EAAOW,aAAe,CACpBJ,KAAM,UACNH,UAAU,GAIGJ,IC7DAA,ED6DAA,EE7DAY,ECMS,SAACX,GAAW,IAEhCC,EAGED,EAHFC,SACAC,EAEEF,EAFFE,UACAU,EACEZ,EADFY,MAEIJ,EAAUC,IAAW,UAAWP,GACtC,OACE,yBAAKA,UAAWM,GACd,yBAAKN,UAAU,gBACZU,GAEH,yBAAKV,UAAU,gBACZD,KChBM,SAASY,IAQtB,OACE,yBAAKX,UAAU,QACb,yBAAKA,UAAU,QAAf,sHAGA,yBAAKA,UAAU,QAAf,gBAGA,kBAAC,EAAD,CAAQI,KAAK,WAAU,kBAAC,IAAD,CAAMQ,GAAG,cAAcZ,UAAU,QAAjC,8B,iICfRa,E,kDAKnB,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IALRgB,iBAImB,IAHnBC,cAGmB,IAFnBL,WAEmB,IADnBM,YACmB,EAEjB,EAAKF,YAAL,UAAsBG,SAAyB,IAAhBC,KAAKC,SAAiB,GAAI,IAAIC,SAAS,KAFrD,E,gEAKE,IACXrB,EAAasB,KAAKvB,MAAlBC,SACRsB,KAAKC,aAAavB,K,mCAGPwB,GACX,IAAMC,EAAQD,EACXE,QAAQ,2CAA4C,wBACpDA,QAAQ,mDAFG,kFAKiBJ,KAAKP,YALtB,uBAYRY,EAAO,CAAC,QAAS,WAAY,OAJlBC,oBAAUH,EAAO,CAChCI,QAAS,CAAC,SAAU,SACpBC,QAAS,CAAC,+BAFJC,MAKFC,EAAO,CAACC,IAAOC,IAAUC,GAE/B,YAAIC,SAAYT,GAAhB,aAAyBK,K,+BAKzB,OACE,yBAAKK,GAAIf,KAAKP,kB,GArCcuB,aCU5BC,E,kDAaJ,WAAYxC,GAAQ,IAAD,8BACjB,cAAMA,IALRyC,gBAImB,IAFnBC,cAEmB,EAGjB,EAAKD,WAAa,IAAIE,IACtB,EAAKD,SAAW,GAChB,EAAKE,MAAQ,CACXC,KAAM,MANS,E,gEAUE,IAAD,OACVnB,EAAUH,KAAKvB,MAAf0B,MACRoB,IAAkBC,iBAAiB,MAAOC,KAC1CF,IAAkBC,iBAAiB,aAAcE,KACjD1B,KAAKkB,WAAWS,QAChB,IAAMZ,EAAKnB,SAAyB,IAAhBC,KAAKC,SAAiB,GAAI,IAAIC,SAAS,IAC3DC,KAAKkB,WAAWU,IAAIb,EAAIJ,IAAMkB,cAAcrC,EAAMQ,KAAKvB,MAAO0B,IAC9DH,KAAK8B,SAAS,CACZR,KAAK,WAAD,OAAaP,EAAb,aACH,WAED,EAAKgB,iB,kCAGI,IAAD,gBACoB/B,KAAKkB,YADzB,IACV,2BAA+C,CAAC,IAAD,yBAAnCH,EAAmC,KAA/BiB,EAA+B,KACvCC,EAAMvC,SAASwC,eAAenB,GACpCf,KAAKmB,SAASgB,KAAKF,GACfA,aAAeG,aACjBxB,IAASyB,OAAOL,EAAWC,IALrB,iC,+BAUF,IAAD,EACqBjC,KAAKvB,MAAzB6D,EADD,EACCA,SAAUnC,EADX,EACWA,MAClB,OACE,oCACA,0BAAMoC,wBAAyB,CAAEC,OAAQxC,KAAKqB,MAAMC,QACpD,4BAAQ3C,UAAU,aAEhB,kBAAC,IAAD,CAAmB2D,SAAUA,EAAUG,MAAOC,KAC3CvC,S,GAvDaa,aAAlBC,EAMG9B,aAAe,CACpBmD,SAAU,MAwDCrB,QC9CA0B,EA1Ba,SAAClE,GAAW,IAE9BmE,EAAUnE,EAAVmE,MAEFC,EAAc,SAACxD,EAAOuD,GAC1B,OAAO,yBAAKjE,UAAU,eACpB,yBAAKA,UAAU,qBAAqBU,GAElCuD,EAAME,KAAI,SAAAC,GAAI,OAAI,kBAAC,IAAD,CAAMC,IAAKD,EAAKE,KAAMtE,UAAU,mBAAmBY,GAAE,sBAAiBwD,EAAKE,OAAUF,EAAKG,kBAKlH,OACE,yBAAKvE,UAAU,UAGZkE,EAAY,2BAAQD,EAAMO,WAC1BN,EAAY,2BAAQD,EAAM1B,WAAWkC,mBCzB7B,GACbD,UAAW,CACT,CACEF,KAAM,aACNC,YAAa,2BACbG,OAAQ,kBAAM,2CAGlBnC,WAAY,CACVkC,gBAAiB,CACf,CACEH,KAAM,SACNC,YAAa,eACbG,OAAQ,kBAAM,mC,QCHhBC,EAAgB,SAAC7E,GAAW,IAAD,EACX8E,mBAAS,MADE,mBACxBC,EADwB,KACpBC,EADoB,KAK/B,OAHAC,YAASjF,EAAMkF,MAAMN,QAAQO,OAAOC,MAAK,SAAAR,GACvCI,EAAMJ,EAAOS,YAEP,kBAAC,IAAD,CACNnE,OAAQ6D,EACRO,UAAW,CACTtD,KAAMQ,MAKG,SAASD,IAAa,IAAD,EAENuC,mBAAS,IAFH,mBAE3BS,EAF2B,KAEnBC,EAFmB,KAoBlC,OAhBsB,IAAlBD,EAAOE,QAGX,SAASC,IAA0C,IAA7BC,EAA4B,uDAAlBC,EACxBC,EAAYC,OAAOC,KAAKJ,GAC9BE,EAAUG,SAAQ,SAAC1B,GACb2B,MAAMC,QAAQP,EAAQrB,IACxBqB,EAAQrB,GAAM0B,SAAQ,SAACd,GACrBM,EAAUD,EAAOY,OAAO,kBAAC,IAAD,CAAO5B,IAAKW,EAAMV,KAAM4B,KAAI,sBAAiBlB,EAAMV,MAAQjB,UAAY,kBAAM,kBAAC,EAAD,CAAe2B,MAAOA,YAG7HQ,EAAaE,EAAWtB,OAV5BoB,GAgBA,yBAAKxF,UAAU,uBACb,kBAAC,EAAD,CAAQiE,MAAOyB,IACf,yBAAK1F,UAAU,qBACb,kBAAC,IAAD,KAEIqF,EAEF,kBAAC,IAAD,CAAOa,KAAK,IAAI7C,UACd,kBAAM,kBAAC,IAAD,CACJrC,OAAQmF,UACRf,UAAW,CACTtD,KAAMQ,WCpDtB,IAkBe8D,EAlBG,SAACtG,GACjB,OACE,yBAAKE,UAAU,iBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,QACb,kBAAC,IAAD,CAAMY,GAAG,SAAT,SAEF,yBAAKZ,UAAU,OACb,kBAAC,IAAD,CAAMY,GAAG,eAAT,gBACA,uBAAGV,KAAK,sCAAsCmG,OAAO,SAASC,IAAI,uBAAlE,YAGHxG,EAAMC,W,OCKEwG,MAbf,WACE,OAEE,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAOL,KAAK,QAAQM,OAAK,EAACnD,UAAW1C,IACrC,kBAAC,IAAD,CAAOuF,KAAK,cAAc7C,UAAWoD,OCDzBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCXN7E,IAASyB,OACP,kBAAC,IAAMqD,WAAP,KACE,kBAAC,EAAD,OAEFhG,SAASwC,eAAe,SDgIpB,kBAAmByD,WACrBA,UAAUC,cAAcC,MACrBhC,MAAK,SAAAiC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,gCEjJ5B,OAAe,0e","file":"static/js/main.60b282f6.chunk.js","sourcesContent":["import React, { ReactNode, FC, ButtonHTMLAttributes, AnchorHTMLAttributes } from 'react';\nimport classnames from 'classnames';\n\nexport type ButtonSize = 'lg' | 'sm'\n\nexport type ButtonType = 'primary' | 'default' | 'danger' | 'link'\n\ninterface BaseButtonProps  {\n  children: ReactNode\n  disabled?: boolean;\n  href?: string;\n  size?: ButtonSize;\n  type?: ButtonType;\n}\n\ntype NativeButtonProps = BaseButtonProps & Omit<ButtonHTMLAttributes<HTMLElement>, 'type'>\ntype AnchorButtonProps = BaseButtonProps & AnchorHTMLAttributes<HTMLElement>\n\ntype ButtonProps = Partial<NativeButtonProps & AnchorButtonProps>\n\n\nconst Button: FC<ButtonProps> = (props) => {\n  const {\n    children,\n    className,\n    disabled,\n    href,\n    size,\n    type,\n    ...restProps\n  } = props;\n  const classes = classnames('btn', className, {\n    [`btn-${type}`]: type,\n    [`btn-${size}`]: size,\n    'disabled': (type === 'link') && disabled\n  })\n  if (type === 'link' && href) {\n    return (\n    <a\n      className={classes}\n      href={href}\n      {...restProps}\n    >\n      {children}\n    </a>)\n  } else {\n    return (\n    <button\n      className={classes}\n      disabled={disabled}\n      {...restProps}\n    >\n      {children}\n    </button>)\n  }\n}\n\nButton.defaultProps = {\n  type: 'default',\n  disabled: false,\n}\n\n\nexport default Button","import Button from './button'\n\nexport default Button","import Card from './card'\n\nexport default Card","import React, { FC, ReactNode, HTMLAttributes } from 'react'\nimport classnames from 'classnames';\n\nexport interface ICard extends HTMLAttributes<HTMLDivElement> {\n  title?: string,\n  children?: ReactNode\n}\n\nconst Card: FC<ICard> = (props) => {\n  const {\n    children,\n    className,\n    title,\n  } = props;\n  const classes = classnames(\"ps-card\", className)\n  return (\n    <div className={classes}>\n      <div className=\"ps-card-head\">\n        {title}\n      </div>\n      <div className=\"ps-card-body\">\n        {children}\n      </div>\n\n    </div>\n  )\n}\n\n\n\nexport default Card\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button } from '@/components'\n// import useEventListener from '@/components/hooks/useEventListener'\n\nexport default function Home() {\n  // const [coords, setCoords] = useState({ x: 0, y: 0 });\n\n  // useEventListener('mousemove', (event: MouseEvent) => {\n  //   setCoords({x: event.pageX, y: event.pageY})\n  // });\n\n\n  return (\n    <div className=\"home\">\n      <div className=\"desc\">\n        Âü∫‰∫éTypeScript‰∏éReact HooksÂºÄÂèëÁöÑuiÁªÑ‰ª∂Â∫ì üöÄüöÄüöÄ\n      </div>\n      <div className=\"desc\">\n        Happy Coding\n      </div>\n      <Button type=\"primary\"><Link to=\"/components\" className=\"view\">Êü•ÁúãÁªÑ‰ª∂</Link></Button>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { transform } from '@babel/standalone';\nimport * as zbui from '../../../components';\n\n\nexport default class Code extends Component {\n  containerId: string;\n  document: any;\n  title: string;\n  source: any;\n  constructor(props) {\n    super(props);\n    this.containerId = `${parseInt(Math.random() * 1e9 + '', 10).toString(36)}`;\n  }\n\n  componentDidMount() {\n    const { children } = this.props;\n    this.renderSource(children);\n  }\n\n  renderSource(codeMd) {\n    const value = codeMd\n      .replace(/import\\s+\\{\\s+(.*)\\s+\\}\\s+from\\s+'zbui';/, 'const { $1 } = zbui;')\n      .replace(/ReactDOM.render\\(\\s?([^]+?)(,\\s?mountNode\\s?\\))/g, `\n      ReactDOM.render(\n        $1,\n        document.getElementById('${this.containerId}'),\n      )\n    `);\n    const { code } = transform(value, {\n      presets: ['es2015', 'react'],\n      plugins: ['proposal-class-properties'],\n    });\n    const args = ['React', 'ReactDOM', 'zbui', code];\n    const argv = [React, ReactDOM, zbui];\n    // eslint-disable-next-line no-new-func\n    new Function(...args)(...argv);\n  }\n\n\n  render() {\n    return (\n      <div id={this.containerId} />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport PropTypes from \"prop-types\";\nimport { PrismLight as SyntaxHighlighter } from \"react-syntax-highlighter\";\n// ËÆæÁΩÆÈ´ò‰∫ÆÊ†∑Âºè\nimport { coy } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n// ËÆæÁΩÆÈ´ò‰∫ÆÁöÑËØ≠Ë®Ä\n// sass, scss, tsx\nimport { jsx, javascript } from \"react-syntax-highlighter/dist/esm/languages/prism\";\n\nimport Code from './Code';\n\ninterface ICodeBlockState {\n  html: string\n}\n\nclass CodeBlock extends Component<{}, ICodeBlockState> {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    language: PropTypes.string\n  };\n\n  static defaultProps = {\n    language: null\n  };\n  components: Map<any, any>;\n\n  nodeList: any[];\n\n  constructor(props) {\n    super(props);\n    // this.style = null;\n    this.components = new Map();\n    this.nodeList = [];\n    this.state = {\n      html: null\n    }\n  }\n\n  componentDidMount() {\n    const { value } = this.props as any;\n    SyntaxHighlighter.registerLanguage(\"jsx\", jsx);\n    SyntaxHighlighter.registerLanguage(\"javascript\", javascript);\n    this.components.clear();\n    const id = parseInt(Math.random() * 1e9 + '', 10).toString(36);\n    this.components.set(id, React.createElement(Code, this.props, value));\n    this.setState({\n      html: `<div id=${id}></div>`\n    }, () => {\n\n      this.renderDOM();\n    })\n  }\n  renderDOM() {\n    for (const [id, component] of this.components) {\n      const div = document.getElementById(id);\n      this.nodeList.push(div);\n      if (div instanceof HTMLElement) {\n        ReactDOM.render(component, div);\n      }\n    }\n  }\n\n  render() { \n    const { language, value } = this.props as any;\n    return (\n      <>\n      <main dangerouslySetInnerHTML={{ __html: this.state.html }} />\n      <figure className=\"highlight\">\n\n        <SyntaxHighlighter language={language} style={coy}>\n          {value}\n        </SyntaxHighlighter>\n      </figure>\n      </>\n    );\n  }\n}\n\nexport default CodeBlock;","import React, { FC } from 'react'\nimport { Link } from 'react-router-dom'\n\ninterface ISlider {\n  menus: any,\n}\n\nconst Slider: FC<ISlider> = (props) => {\n  \n  const { menus } = props;\n  \n  const renderMenus = (title, menus) => {\n    return <div className=\"slider-menu\">\n      <div className=\"slider-menu-label\">{title}</div>\n      {\n        menus.map(item => <Link key={item.name} className=\"slider-menu-item\" to={`/components/${item.name}`} >{item.description}</Link>)\n      }\n    </div>\n  }\n\n  return (\n    <div className=\"slider\">\n      {/* <Link to=\"/components/QuickStart\" >QuickStart</Link>\n      <Link to=\"/components/Button\" >Button</Link> */}\n      {renderMenus('ÂºÄÂèëÊåáÂçó', menus.documents)}\n      {renderMenus('Êìç‰ΩúÂèçÈ¶à', menus.components.basicComponents)}\n    </div>\n  )\n}\n\n// Slider.Item = (props) => <li>{props.children}</li>\n\n\nexport default Slider","export default {\n  documents: [\n    {\n      name: 'QuickStart',\n      description: 'Âø´ÈÄü‰∏äÊâã',\n      module: () => import('@/README.md'),\n    },\n  ],\n  components: {\n    basicComponents: [\n      {\n        name: 'Button',\n        description: 'ÊåâÈíÆ',\n        module: () => import('@/components/Button/index.md'),\n      },\n    ]\n  }\n\n}","import React, { useState } from 'react'\nimport { Route, Switch } from 'react-router-dom';\nimport loadable from '@loadable/component'\nimport ReactMarkdown from 'react-markdown'\nimport CodeBlock from '../../components/MarkDown';\nimport Slider from '../../components/Slider';\nimport siteConfig from '../../site.config';\nimport home from '@/README.md'\n\n\nconst LazyComponent = (props) => {\n  const [md, setMd] = useState(null);\n  loadable(props.route.module).load().then(module => {\n    setMd(module.default)\n  })  \n  return  <ReactMarkdown\n    source={md}\n    renderers={{\n      code: CodeBlock,\n    }}\n  />\n}\n\nexport default function Component() {\n\n  const [routes, setRoutes] = useState([])\n\n  if (routes.length === 0) {\n    renderRoutes()\n  }\n  function renderRoutes(configs = siteConfig): void {\n    const routeKyes = Object.keys(configs);\n    routeKyes.forEach((item) => {\n      if (Array.isArray(configs[item])) {\n        configs[item].forEach((route) => {\n          setRoutes(routes.concat(<Route key={route.name} path={`/components/${route.name}`} component={ () => <LazyComponent route={route} />} />))\n        });\n      } else {\n        renderRoutes(siteConfig[item]);\n      }\n    });\n\n  }\n  return (\n    <div className=\"component-container\">\n      <Slider menus={siteConfig} />\n      <div className=\"component-content\">\n        <Switch>\n          {\n            routes\n          }\n          <Route path=\"*\" component={\n            () => <ReactMarkdown\n              source={home}\n              renderers={{\n                code: CodeBlock,\n              }}\n            />}\n          />\n        </Switch>\n      </div>\n    </div>\n  )\n}\n","import React, { FC } from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Layout:FC = (props) => {\n  return (\n    <div className=\"app-container\">\n      <div className=\"app-header\">\n        <div className=\"logo\">\n          <Link to=\"/zbui\">Zbui</Link>\n        </div>\n        <div className=\"nav\">\n          <Link to=\"/components\">ÁªÑ‰ª∂</Link>\n          <a href=\"https://github.com/xingyuefeng/zbui\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a>\n        </div>\n      </div>\n      {props.children}\n    </div>\n  )\n}\n\n\nexport default Layout","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './pages/home'\nimport Components from './pages/component'\nimport Layout from './components/Layout'\nimport './app.scss'\n\nfunction App() {\n  return (\n\n    <Router>\n      <Layout>\n        <Route path=\"/zbui\" exact component={Home} />\n        <Route path=\"/components\" component={Components} />\n      </Layout>\n    </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../components/styles/index.scss'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default \"# Zbui\\n\\n## È¢ÑËßàÊñáÊ°£\\n\\nnpm start\\n\\n## Ê∏ÖÈô§ÊµãËØïÁºìÂ≠ò\\n\\nnpm run test --  --clearCache\\n\\n## ÈáçÊñ∞ÁîüÊàêÂø´ÁÖßÊñá‰ª∂\\n\\nnpm test -- -u\\n\\n## ÁîüÊàêÊµãËØïË¶ÜÁõñÊä•Âëä\\n\\nnpm test -- --coverage\\n\\n## ËÆ°Âàí\\n\\n- [ ] modal `coding`\\n- [ ] icons\\n- [ ] Input\\n- [ ] Radio\\n- [ ] Checkbox\\n- [ ] Select\\n- [ ] Form\\n- [ ] message\\n- [ ] Notification\\n- [ ] Tabs\\n- [ ] List\\n- [ ] ...\\n\";"],"sourceRoot":""}
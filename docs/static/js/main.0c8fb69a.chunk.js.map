{"version":3,"sources":["../components/Button/button.tsx","../components/Button/index.tsx","../components/Card/index.tsx","../components/Card/card.tsx","../components/hooks/useEventListener.ts","../components/Dialog/dialog.tsx","../components/usePortal/index.tsx","../components/Dialog/dialogWrap.tsx","../components/Dialog/index.tsx","pages/home/index.tsx","components/MarkDown/Code.tsx","components/MarkDown/index.tsx","components/Slider/index.tsx","site.config.ts","pages/component/index.tsx","components/Layout/index.tsx","App.tsx","serviceWorker.ts","index.tsx","../README.md"],"names":["Button","forwardRef","props","ref","children","className","disabled","href","size","type","restProps","classes","classnames","defaultProps","Card","title","useEventListener","eventName","handler","options","useRef","savedHandler","useEffect","current","passedInElement","dom","element","window","addEventListener","eventListener","event","capture","once","passive","removeEventListener","getScroll","w","top","ret","method","d","document","documentElement","body","Dialog","visible","closable","prefixCls","mask","bodyStyle","maskClosable","footer","maskStyle","wrapStyle","onClose","useState","x","y","mousePosition","serMousePosition","showTransition","serShowTransition","elOffset","left","dialogRef","el","rect","getBoundingClientRect","pos","doc","ownerDocument","defaultView","parentWindow","offset","findDOMNode","pageX","pageY","forWrapStyle","display","style","CSSTransition","timeout","classNames","in","onEnter","onExited","transformOrigin","tabIndex","role","onClick","errorMessage1","usePortal","closeOnOutsideClick","closeOnEsc","bindTo","isOpen","defaultIsOpen","onOpen","onPortalClick","eventHandlers","makeOpen","open","setOpen","useCallback","v","targetEl","portal","createElement","elToMountTo","useMemo","createCustomEvent","e","persist","currentTarget","customEventHandlers","Object","entries","reduce","acc","handlerName","eventHandler","openPortal","customEvent","setTimeout","Error","closePortal","togglePortal","handleKeydown","key","undefined","handleOutsideMouseClick","containsTarget","target","contains","button","handleMouseDown","HTMLElement","node","appendChild","removeChild","Portal","createPortal","assign","portalRef","bind","getContainer","Home","aria-labelledby","to","Code","containerId","source","parseInt","Math","random","toString","this","renderSource","codeMd","value","replace","args","transform","presets","plugins","code","argv","React","ReactDOM","zbui","Function","id","Component","CodeBlock","components","nodeList","Map","state","html","SyntaxHighlighter","registerLanguage","jsx","javascript","clear","set","setState","renderDOM","component","div","getElementById","push","render","language","dangerouslySetInnerHTML","__html","coy","Slider","menus","renderMenus","map","item","name","description","documents","basicComponents","module","LazyComponent","md","setMd","loadable","route","load","then","default","renderers","routes","length","renderRoutes","configs","keys","forEach","Array","isArray","console","log","path","siteConfig","home","Layout","rel","App","exact","Components","Boolean","location","hostname","match","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0c8fb69a.chunk.js","sourcesContent":["import React, { ReactNode, FC, ButtonHTMLAttributes, AnchorHTMLAttributes, forwardRef, MutableRefObject } from 'react';\nimport classnames from 'classnames';\n\nexport type ButtonSize = 'lg' | 'sm'\n\nexport type ButtonType = 'primary' | 'default' | 'danger' | 'link'\n\ninterface BaseButtonProps  {\n  children: ReactNode\n  disabled?: boolean;\n  href?: string;\n  size?: ButtonSize;\n  type?: ButtonType;\n  ref?: MutableRefObject<HTMLButtonElement> &  MutableRefObject<HTMLAnchorElement> ;\n}\n\ntype NativeButtonProps = BaseButtonProps & Omit<ButtonHTMLAttributes<HTMLElement>, 'type'>\ntype AnchorButtonProps = BaseButtonProps & AnchorHTMLAttributes<HTMLElement>\n\ntype ButtonProps = Partial<NativeButtonProps & AnchorButtonProps>\n\n\nconst Button: FC<ButtonProps> = forwardRef((props, ref) => {\n  const {\n    children,\n    className,\n    disabled,\n    href,\n    size,\n    type,\n    ...restProps\n  } = props;\n  const classes = classnames('btn', className, {\n    [`btn-${type}`]: type,\n    [`btn-${size}`]: size,\n    'disabled': (type === 'link') && disabled\n  })\n  if (type === 'link' && href) {\n    return (\n    <a\n      className={classes}\n      href={href}\n      ref={ref}\n      {...restProps}\n    >\n      {children}\n    </a>)\n  } else {\n    return (\n    <button\n      className={classes}\n      disabled={disabled}\n      ref={ref}\n      {...restProps}\n    >\n      {children}\n    </button>)\n  }\n})\n\nButton.defaultProps = {\n  type: 'default',\n  disabled: false,\n}\n\n\nexport default Button","import Button from './button'\n\nexport default Button","import Card from './card'\n\nexport default Card","import React, { FC, ReactNode, HTMLAttributes } from 'react'\nimport classnames from 'classnames';\n\nexport interface ICard extends HTMLAttributes<HTMLDivElement> {\n  title?: string,\n  children?: ReactNode\n}\n\nconst Card: FC<ICard> = (props) => {\n  const {\n    children,\n    className,\n    title,\n  } = props;\n  const classes = classnames(\"ps-card\", className)\n  return (\n    <div className={classes}>\n      <div className=\"ps-card-head\">\n        {title}\n      </div>\n      <div className=\"ps-card-body\">\n        {children}\n      </div>\n\n    </div>\n  )\n}\n\n\n\nexport default Card\n","import { MutableRefObject, useEffect, useRef } from 'react';\n\ntype Target = HTMLElement | Window;\ntype Options = { dom?: Dom; capture?: boolean; once?: boolean; passive?: boolean; }\ntype Dom = Target | (() => Target) | null;\n\nfunction useEventListener<T extends Target = HTMLElement>(\n  eventName: string,\n  handler: Function,\n  options?: { capture?: boolean; once?: boolean; passive?: boolean; },\n): MutableRefObject<T>;\n\nfunction useEventListener<T extends Target = HTMLElement>(\n  eventName: string,\n  handler: Function,\n  options?: { dom: Dom, capture?: boolean; once?: boolean; passive?: boolean; },\n): void\n\nfunction useEventListener<T extends Target = HTMLElement>(\n  eventName: string,\n  handler: Function,\n  options?: Options,\n) {\n  const ref = useRef<T>();\n  const savedHandler = useRef<Function>();\n\n  useEffect(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n  \n  useEffect(() => {\n    const passedInElement = options &&\n      (typeof options.dom === 'function' ? options.dom() : options.dom);\n    let element = passedInElement ? passedInElement : ref.current || window;\n    const isSupported = element.addEventListener;\n    if (!isSupported) return;\n    const eventListener = (\n      event: Event,\n    ): EventListenerOrEventListenerObject | AddEventListenerOptions =>\n      savedHandler.current && savedHandler.current(event);\n\n    element.addEventListener(eventName, eventListener,{\n      capture:options?.capture,\n      once:options?.once,\n      passive:options?.passive\n    });\n\n    return () => {\n      element.removeEventListener(eventName, eventListener,{\n        capture:options?.capture,\n      });\n    };\n  }, [eventName, options]);\n  return ref;\n}\n\nexport default useEventListener;","import React, {\n  FC,\n  CSSProperties,\n  ReactNode,\n  useState,\n  useRef,\n} from \"react\";\nimport { findDOMNode } from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport classnames from \"classnames\";\nimport Button from \"../Button\";\nimport useEventListener from \"../hooks/useEventListener\";\n\ntype IStringOrHtmlElement = string | HTMLElement;\n\nfunction getScroll(w: any, top?: boolean) {\n  let ret = w[`page${top ? \"Y\" : \"X\"}Offset`];\n  const method = `scroll${top ? \"Top\" : \"Left\"}`;\n  if (typeof ret !== \"number\") {\n    const d = w.document;\n    ret = d.documentElement[method];\n    if (typeof ret !== \"number\") {\n      ret = d.body[method];\n    }\n  }\n  return ret;\n}\n\nfunction offset(el: any) {\n  const rect = el.getBoundingClientRect();\n  const pos = {\n    left: rect.left,\n    top: rect.top,\n  };\n  const doc = el.ownerDocument;\n  const w = doc.defaultView || doc.parentWindow;\n  pos.left += getScroll(w);\n  pos.top += getScroll(w, true);\n  return pos;\n}\n\nexport interface Dioalogprops {\n  className?: string | undefined;\n  closable?: boolean;\n  prefixCls?: string;\n  bodyStyle?: CSSProperties;\n  maskStyle?: CSSProperties;\n  wrapStyle?: CSSProperties;\n  visible: boolean;\n  title?: string | ReactNode;\n  footer?: ReactNode;\n  mask?: boolean;\n  maskClosable?: boolean;\n  keyboard?: boolean;\n  mousePosition?: {\n    x: number;\n    y: number;\n  };\n  onClose?: () => void;\n  getContainer?: IStringOrHtmlElement | (() => IStringOrHtmlElement) | false;\n  closeIcon?: ReactNode;\n  children?: ReactNode;\n}\n\nconst Dialog: FC<Dioalogprops> = ({\n  visible,\n  children,\n  closable = true,\n  className,\n  prefixCls = \"zb\",\n  title,\n  mask = true,\n  maskClosable = true,\n  bodyStyle,\n  footer,\n  maskStyle,\n  wrapStyle,\n  onClose = () => {},\n}) => {\n  const [mousePosition, serMousePosition] = useState({ x: 0, y: 0 });\n  const [showTransition, serShowTransition] = useState(false);\n  const elOffset = useRef({ left: 0, top: 0 });\n\n  const dialogRef = useRef() as any;\n  // console.log(elOffset);\n  useEventListener(\"click\", (event: MouseEvent) => {\n    if (visible) {\n      const dialogNode = findDOMNode(dialogRef.current);\n      const el = offset(dialogNode);\n      if (!mousePosition.x && !mousePosition.y) {\n        elOffset.current = {\n          left: el.left,\n          top: el.top,\n        };\n        serMousePosition({ x: event.pageX, y: event.pageY });\n      }\n  \n    }\n  });\n  const forWrapStyle = visible || showTransition ? wrapStyle : { ...wrapStyle, display: 'none' }\n  return (\n    <div className={`${prefixCls}-dialog-root`}>\n      <div\n        className={classnames(className, {\n          [prefixCls + \"-mask\"]: mask,\n          [prefixCls + \"-mask-hidden\"]: !visible,\n        })}\n        style={maskStyle}\n      />\n      <CSSTransition\n        timeout={300}\n        classNames={`${prefixCls}-alert`}\n        in={visible}\n        onEnter={() => {serShowTransition(true)}}\n        onExited={() => {serShowTransition(false)}}\n        style={{\n          transformOrigin: `${mousePosition.x - elOffset.current.left}px ${\n            mousePosition.y - elOffset.current.top\n          }px`,\n          ...forWrapStyle\n        }}\n      >\n        \n        <div\n          className={`${prefixCls}-wrap`}\n          tabIndex={-1}\n        >\n        <div className={`${prefixCls}-content`} ref={dialogRef} role=\"dialog\">\n            {closable && (\n              <Button\n                className={`${prefixCls}-close`}\n                type=\"primary\"\n                size=\"sm\"\n                onClick={() => onClose()}\n              >\n                X\n              </Button>\n            )}\n            {title && (\n              <div className={`${prefixCls}-header`}>\n                <div className={`${prefixCls}-title`}>{title}</div>\n              </div>\n            )}\n            <div className={`${prefixCls}-body`} style={bodyStyle}>\n              {children}\n            </div>\n            {footer && <div className={`${prefixCls}-footer`}>{footer}</div>}\n          </div>\n        \n        </div>\n      </CSSTransition>\n    </div>\n  );\n};\n\nexport default Dialog;\n","import {\n  useState,\n  useRef,\n  useCallback,\n  useEffect,\n  MutableRefObject,\n  DOMAttributes,\n  SyntheticEvent,\n  useMemo,\n  ReactNode\n} from \"react\";\nimport { createPortal, findDOMNode } from \"react-dom\";\n\ntype HTMLElRef = MutableRefObject<HTMLElement>;\n\ntype CustomEvent = {\n  // 合成时间\n  event?: SyntheticEvent<any, Event>;\n  portal: HTMLElRef;\n  targetEl: HTMLElRef;\n} & SyntheticEvent<any, Event>;\n\ntype CustomEventHandler = (customEvent: CustomEvent) => void;\n\ntype CustomEventHandlers = {\n  [K in keyof DOMAttributes<K>]?: CustomEventHandler;\n};\n\ntype EventListenerRef = MutableRefObject<\n  {\n    [K in keyof DOMAttributes<K>]?: (event: SyntheticEvent<any, Event>) => void;\n  }\n>;\n\nexport type UsePortalOptions = {\n  closeOnOutsideClick?: boolean;\n  closeOnEsc?: boolean;\n  bindTo?: HTMLElement; // attach the portal to this node in the DOM\n  isOpen?: boolean;\n  onOpen?: CustomEventHandler;\n  onClose?: CustomEventHandler;\n  onPortalClick?: CustomEventHandler;\n} & CustomEventHandlers;\n\nexport const errorMessage1 =\n  \"You must either add a `ref` to the element you are interacting with or pass an `event` to openPortal(e) or togglePortal(e).\";\n\nexport default function usePortal({\n  closeOnOutsideClick = true,\n  closeOnEsc = true,\n  bindTo, // attach the portal to this node in the DOM\n  isOpen: defaultIsOpen = false,\n  onOpen,\n  onClose,\n  onPortalClick,\n  ...eventHandlers\n}: UsePortalOptions = {}) {\n  const [isOpen, makeOpen] = useState(defaultIsOpen);\n  // we use this ref because `isOpen` is stale for handleOutsideMouseClick\n\n  const open = useRef(isOpen);\n\n  const setOpen = useCallback((v: boolean) => {\n    // workaround to not have stale `isOpen` in the handleOutsideMouseClick\n    open.current = v;\n    makeOpen(v);\n  }, []);\n\n  const targetEl = useRef() as HTMLElRef; // this is the element you are clicking/hovering/whatever, to trigger opening the portal\n  const portal = useRef(document.createElement(\"div\")) as HTMLElRef;\n\n  useEffect(() => {\n    if (!portal.current) portal.current = document.createElement(\"div\");\n  }, [portal]);\n\n  const elToMountTo = useMemo(() => {\n    return (bindTo && findDOMNode(bindTo)) || document.body;\n  }, [bindTo]);\n\n  const createCustomEvent = (e: any) => {\n    if (!e) return { portal, targetEl, event: e };\n    const event = e || {};\n    if (event.persist) event.persist(); \n    event.portal = portal;\n    event.targetEl = targetEl;\n    event.event = e;\n    const { currentTarget } = e;\n    if (!targetEl.current && currentTarget && currentTarget !== document)\n      targetEl.current = event.currentTarget;\n    return event;\n  };\n\n  // this should handle all eventHandlers like onClick, onMouseOver, etc. passed into the config\n  // 这应该处理传递到配置中的所有事件处理程序，例如onClick，onMouseOver等。\n  const customEventHandlers: CustomEventHandlers = Object.entries(\n    eventHandlers\n  ).reduce<any>((acc, [handlerName, eventHandler]) => {\n    acc[handlerName] = (event?: SyntheticEvent<any, Event>) => {\n\n      eventHandler(createCustomEvent(event));\n    };\n    return acc;\n  }, {});\n\n  const openPortal = useCallback(\n    (e: any) => {\n      const customEvent = createCustomEvent(e);\n      // for some reason, when we don't have the event argument, there\n      // is a weird race condition. Would like to see if we can remove\n      // setTimeout, but for now this works\n      if (targetEl.current == null) {\n        setTimeout(() => setOpen(true), 0);\n        throw Error(errorMessage1);\n      }\n      if (onOpen) onOpen(customEvent);\n      setOpen(true);\n      \n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [portal, targetEl, onOpen, setOpen]\n  );\n\n  const closePortal = useCallback((e: any) => {\n    const customEvent = createCustomEvent(e)\n    if (onClose && open.current) onClose(customEvent)\n    if (open.current) setOpen(false)\n     // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onClose, setOpen])\n\n\n  const togglePortal = useCallback((e: SyntheticEvent<any, Event>): void => \n    open.current ? closePortal(e) : openPortal(e),\n    [closePortal, openPortal]\n  )\n\n  const handleKeydown = useCallback((e: KeyboardEvent): void => \n    (e.key === 'Escape' && closeOnEsc) ? closePortal(e) : undefined,\n    [closeOnEsc, closePortal]\n  ) \n\n  const handleOutsideMouseClick = useCallback((e: MouseEvent): void => {\n    const containsTarget = (target: HTMLElRef) => target.current && target.current.contains ? target.current.contains(e.target as HTMLElement) : null\n    if (containsTarget(portal) || (e as any).button !== 0 || !open.current || containsTarget(targetEl)) return\n    if (closeOnOutsideClick) closePortal(e)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [closePortal, closeOnOutsideClick, portal])\n\n  const handleMouseDown = useCallback((e: MouseEvent): void => {\n  \n    if (!(portal.current instanceof HTMLElement)) return\n    const customEvent = createCustomEvent(e)\n    if (portal.current.contains && portal.current.contains(customEvent.target as HTMLElement) && onPortalClick) onPortalClick(customEvent)\n    handleOutsideMouseClick(e)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [handleOutsideMouseClick])\n\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeydown)\n    document.addEventListener('mousedown', handleMouseDown as any)\n    if (!(elToMountTo instanceof HTMLElement) || !(portal.current instanceof HTMLElement)) return\n    \n    const node = portal.current\n\n    elToMountTo.appendChild(portal.current)\n\n    return () => {\n      document.removeEventListener('keydown', handleKeydown)\n      document.removeEventListener('mousedown', handleMouseDown as any)\n      elToMountTo.removeChild(node)\n    }\n  })\n\n  const Portal = useCallback(({ children }: { children: ReactNode }) => {\n    if (portal.current != null) return createPortal(children, portal.current)\n   \n    return null\n  }, [portal])\n\n \n\n  return Object.assign(\n    [openPortal, closePortal, open.current, Portal, togglePortal, targetEl, portal],\n    {\n      isOpen: open.current,\n      openPortal,\n      ref: targetEl,\n      closePortal,\n      togglePortal,\n      setOpen,\n      Portal,\n      portalRef: portal,\n      ...customEventHandlers,\n      bind: { // used if you want to spread all html attributes onto the target element\n        ref: targetEl,\n        ...customEventHandlers\n      }\n    }\n  )\n}\n","import React, { useEffect } from \"react\";\nimport Dialog, { Dioalogprops } from \"./dialog\";\nimport usePortal, { UsePortalOptions } from \"../usePortal\";\n\nexport default (props: Dioalogprops) => {\n  const { getContainer, visible } = props;\n\n  const { Portal, setOpen } = usePortal({\n    bindTo: getContainer,\n    isOpen: visible,\n  } as UsePortalOptions);\n  if (getContainer === false) {\n    return <Dialog {...props} />;\n  }\n  useEffect(() => {\n    setOpen(visible);\n  }, [setOpen, visible]);\n\n  return (\n    <Portal>\n      <Dialog {...props} />\n    </Portal>\n  )\n};\n","import Dialog from './dialogWrap'\n\nexport default Dialog","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"@/components\";\n\n// import useEventListener from '@/components/hooks/useEventListener'\n\nexport default function Home() {\n  // useEventListener('mousemove', (event: MouseEvent) => {\n  //   setCoords({x: event.pageX, y: event.pageY})\n  // });\n\n  return (\n    <div className=\"home\">\n      <div className=\"desc\">\n        基于TypeScript与React Hooks开发的ui组件库{\" \"}\n        <span role=\"img\" aria-labelledby=\"rocket\">\n          >🚀🚀🚀\n        </span>\n      </div>\n      <div className=\"desc\">Happy Coding</div>\n      <Button type=\"primary\">\n        <Link to=\"/components\" className=\"view\">\n          查看组件\n        </Link>\n      </Button>\n     \n    </div>\n  );\n}\n\n\n\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { transform } from '@babel/standalone';\nimport * as zbui from '../../../components';\n\n\nexport default class Code extends Component {\n  containerId: string;\n  document: any;\n  title?: string;\n  source: any;\n  constructor(props: any) {\n    super(props);\n    this.containerId = `${parseInt(Math.random() * 1e9 + '', 10).toString(36)}`;\n  }\n\n  componentDidMount() {\n    const { children } = this.props;\n    this.renderSource(children);\n  }\n\n  renderSource(codeMd: any) {\n    const value = codeMd\n      .replace(/import\\s+\\{\\s+(.*)\\s+\\}\\s+from\\s+'zbui';/, 'const { $1 } = zbui;')\n      .replace(/ReactDOM.render\\(\\s?([^]+?)(,\\s?mountNode\\s?\\))/g, `\n      ReactDOM.render(\n        $1,\n        document.getElementById('${this.containerId}'),\n      )\n    `);\n    const { code } = transform(value, {\n      presets: ['es2015', 'react'],\n      plugins: ['proposal-class-properties'],\n    });\n    const args = ['React', 'ReactDOM', 'zbui', code];\n    const argv = [React, ReactDOM, zbui];\n    // eslint-disable-next-line no-new-func\n    new Function(...args as any)(...argv);\n  }\n\n\n  render() {\n    return (\n      <div id={this.containerId} />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport PropTypes from \"prop-types\";\nimport { PrismLight as SyntaxHighlighter } from \"react-syntax-highlighter\";\n// 设置高亮样式\nimport { coy } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n// 设置高亮的语言\n// sass, scss, tsx\nimport jsx from \"react-syntax-highlighter/dist/esm/languages/prism/jsx\";\nimport javascript from \"react-syntax-highlighter/dist/esm/languages/prism/javascript\";\n\nimport Code from './Code';\n\ninterface ICodeBlockState {\n  html: string\n}\n\nclass CodeBlock extends Component<{}, ICodeBlockState> {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    language: PropTypes.string\n  };\n\n  static defaultProps = {\n    language: null\n  };\n  components: Map<any, any>;\n\n  nodeList: any[];\n\n  constructor(props: any) {\n    super(props);\n    // this.style = null;\n    this.components = new Map();\n    this.nodeList = [];\n    this.state = {\n      html: ''\n    }\n  }\n\n  componentDidMount() {\n    const { value } = this.props as any;\n    SyntaxHighlighter.registerLanguage(\"jsx\", jsx);\n    SyntaxHighlighter.registerLanguage(\"javascript\", javascript);\n    this.components.clear();\n    const id = parseInt(Math.random() * 1e9 + '', 10).toString(36);\n    this.components.set(id, React.createElement(Code, this.props, value));\n    this.setState({\n      html: `<div id=${id}></div>`\n    }, () => {\n\n      this.renderDOM();\n    })\n  }\n  renderDOM() {\n    for (const [id, component] of this.components as any) {\n      const div = document.getElementById(id);\n      this.nodeList.push(div);\n      if (div instanceof HTMLElement) {\n        ReactDOM.render(component, div);\n      }\n    }\n  }\n\n  render() { \n    const { language, value } = this.props as any;\n    return (\n      <>\n      <main dangerouslySetInnerHTML={{ __html: this.state.html }} />\n      <figure className=\"highlight\">\n\n        <SyntaxHighlighter language={language} style={coy}>\n          {value}\n        </SyntaxHighlighter>\n      </figure>\n      </>\n    );\n  }\n}\n\nexport default CodeBlock;","import React, { FC } from 'react'\nimport { Link } from 'react-router-dom'\n\ntype Menus = {\n  name: string,\n  description: string,\n  module: () => {}\n}\n\ninterface ISlider {\n  menus: {\n    [propName: string]: Menus[] | Object,\n    components: {\n      [propName: string]: Menus[],\n    }\n  },\n}\n\nconst Slider: FC<ISlider> = (props) => {\n  \n  const { menus } = props;\n  \n  const renderMenus = (title: string, menus: Menus[]) => {\n    return <div className=\"slider-menu\">\n      <div className=\"slider-menu-label\">{title}</div>\n      {\n        menus.map(item => <Link key={item.name} className=\"slider-menu-item\" to={`/components/${item.name}`} >{item.description}</Link>)\n      }\n    </div>\n  }\n\n  return (\n    <div className=\"slider\">\n      {/* <Link to=\"/components/QuickStart\" >QuickStart</Link>\n      <Link to=\"/components/Button\" >Button</Link> */}\n      {renderMenus('开发指南', menus.documents as Menus[])}\n      {renderMenus('操作反馈', menus.components.basicComponents)}\n    </div>\n  )\n}\n\n// Slider.Item = (props) => <li>{props.children}</li>\n\n\nexport default Slider","export default {\n  documents: [\n    {\n      name: 'QuickStart',\n      description: '快速上手',\n      module: () => import('@/README.md'),\n    },\n  ],\n  components: {\n    basicComponents: [\n      {\n        name: 'Button',\n        description: '按钮',\n        module: () => import('@/components/Button/index.md'),\n      },\n      {\n        name: 'Dialog',\n        description: '弹出框',\n        module: () => import('@/components/Dialog/index.md'),\n      },\n    ]\n  }\n\n}","import React, { useState, ReactNode } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport loadable from \"@loadable/component\";\nimport ReactMarkdown from \"react-markdown\";\nimport CodeBlock from \"../../components/MarkDown\";\nimport Slider from \"../../components/Slider\";\nimport siteConfig from \"../../site.config\";\nimport home from \"@/README.md\";\n\ntype MenuRoute = {\n  name: string;\n  description: string;\n  module: () => {};\n  [key:string]:any;\n};\n\n\ninterface ConfigInfo {\n  [key: string]: any,\n}\n\nconst LazyComponent = (props: any) => {\n  const [md, setMd] = useState(\"\");\n  loadable(props.route.module)\n    .load()\n    .then((module: any) => {\n      // console.log(module.default);\n      setMd(module.default);\n    });\n  return (\n    <ReactMarkdown\n      source={md}\n      renderers={{\n        code: CodeBlock,\n      }}\n    />\n  );\n};\n\nexport default function Component() {\n  const routes = [] as ReactNode[]\n  if (routes.length === 0) {\n    renderRoutes(siteConfig);\n  }\n  function renderRoutes(configs: ConfigInfo): void {\n    const routeKyes = Object.keys(configs);\n \n    routeKyes.forEach((item) => {\n      if (Array.isArray(configs[item])) {\n        (configs[item] as MenuRoute[]).forEach((route: MenuRoute) => { \n          console.log(routes);\n            routes.push(\n              <Route\n                key={route.name}\n                path={`/components/${route.name}`}\n                component={() => <LazyComponent route={route} />}\n              />\n            )\n        });\n      } else {\n        let other = siteConfig as ConfigInfo\n        renderRoutes(other[item]);\n      }\n    });\n  }\n  console.log(routes);\n  return (\n    <div className=\"component-container\">\n      <Slider menus={siteConfig} />\n      <div className=\"component-content\">\n        <Switch>\n          {routes}\n          <Route\n            path=\"*\"\n            component={() => (\n              <ReactMarkdown\n                source={home}\n                renderers={{\n                  code: CodeBlock,\n                }}\n              />\n            )}\n          />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n","import React, { FC } from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Layout:FC = (props) => {\n  return (\n    <div className=\"app-container\">\n      <div className=\"app-header\">\n        <div className=\"logo\">\n          <Link to=\"/zbui\">Zbui</Link>\n        </div>\n        <div className=\"nav\">\n          <Link to=\"/components\">组件</Link>\n          <a href=\"https://github.com/xingyuefeng/zbui\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a>\n        </div>\n      </div>\n      {props.children}\n    </div>\n  )\n}\n\n\nexport default Layout","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './pages/home'\nimport Components from './pages/component'\nimport Layout from './components/Layout'\nimport './app.scss'\n\nfunction App() {\n  return (\n\n    <Router>\n      <Layout>\n        <Route path=\"/zbui\" exact component={Home} />\n        <Route path=\"/components\" component={Components} />\n      </Layout>\n    </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../components/styles/index.scss'\n\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default \"# Zbui\\n\\n## 预览文档\\n\\nnpm start\\n\\n## 清除测试缓存\\n\\nnpm run test --  --clearCache\\n\\n## 重新生成快照文件\\n\\nnpm test -- -u\\n\\n## 生成测试覆盖报告\\n\\nnpm test -- --coverage\\n\\n## 计划\\n\\n- [x] Portal\\n- [ ] icons\\n- [x] Dialog  `coding`\\n- [ ] Input\\n- [ ] Radio\\n- [ ] Checkbox\\n- [ ] Select\\n- [ ] Form\\n- [ ] message\\n- [ ] Notification\\n- [ ] Tabs\\n- [ ] List\\n- [ ] ...\\n\";"],"sourceRoot":""}
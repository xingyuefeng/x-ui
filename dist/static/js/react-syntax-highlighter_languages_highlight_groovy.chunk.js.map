{"version":3,"file":"static/js/react-syntax-highlighter_languages_highlight_groovy.chunk.js","sources":["/Users/xingyuefeng/code/github/zbui/node_modules/react-syntax-highlighter/node_modules/highlight.js/lib/languages/groovy.js"],"sourcesContent":["module.exports = function(hljs) {\n    return {\n        keywords: {\n            literal : 'true false null',\n            keyword:\n            'byte short char int long boolean float double void ' +\n            // groovy specific keywords\n            'def as in assert trait ' +\n            // common keywords with Java\n            'super this abstract static volatile transient public private protected synchronized final ' +\n            'class interface enum if else for while switch case break default continue ' +\n            'throw throws try catch finally implements extends new import package return instanceof'\n        },\n\n        contains: [\n            hljs.COMMENT(\n                '/\\\\*\\\\*',\n                '\\\\*/',\n                {\n                    relevance : 0,\n                    contains : [\n                      {\n                          // eat up @'s in emails to prevent them to be recognized as doctags\n                          begin: /\\w+@/, relevance: 0\n                      },\n                      {\n                          className : 'doctag',\n                          begin : '@[A-Za-z]+'\n                      }\n                    ]\n                }\n            ),\n            hljs.C_LINE_COMMENT_MODE,\n            hljs.C_BLOCK_COMMENT_MODE,\n            {\n                className: 'string',\n                begin: '\"\"\"', end: '\"\"\"'\n            },\n            {\n                className: 'string',\n                begin: \"'''\", end: \"'''\"\n            },\n            {\n                className: 'string',\n                begin: \"\\\\$/\", end: \"/\\\\$\",\n                relevance: 10\n            },\n            hljs.APOS_STRING_MODE,\n            {\n                className: 'regexp',\n                begin: /~?\\/[^\\/\\n]+\\//,\n                contains: [\n                    hljs.BACKSLASH_ESCAPE\n                ]\n            },\n            hljs.QUOTE_STRING_MODE,\n            {\n                className: 'meta',\n                begin: \"^#!/usr/bin/env\", end: '$',\n                illegal: '\\n'\n            },\n            hljs.BINARY_NUMBER_MODE,\n            {\n                className: 'class',\n                beginKeywords: 'class interface trait enum', end: '{',\n                illegal: ':',\n                contains: [\n                    {beginKeywords: 'extends implements'},\n                    hljs.UNDERSCORE_TITLE_MODE\n                ]\n            },\n            hljs.C_NUMBER_MODE,\n            {\n                className: 'meta', begin: '@[A-Za-z]+'\n            },\n            {\n                // highlight map keys and named parameters as strings\n                className: 'string', begin: /[^\\?]{0}[A-Za-z0-9_$]+ *:/\n            },\n            {\n                // catch middle element of the ternary operator\n                // to avoid highlight it as a label, named parameter, or map key\n                begin: /\\?/, end: /\\:/\n            },\n            {\n                // highlight labeled statements\n                className: 'symbol', begin: '^\\\\s*[A-Za-z0-9_$]+:',\n                relevance: 0\n            }\n        ],\n        illegal: /#|<\\//\n    }\n};"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAPA;AAYA;AAKA;AACA;AAEA;AACA;AAAA;AAFA;AAKA;AACA;AAFA;AAPA;AAiBA;AACA;AAAA;AAFA;AAKA;AACA;AAAA;AAFA;AAKA;AACA;AAAA;AACA;AAHA;AAOA;AACA;AACA;AAHA;AASA;AACA;AAAA;AACA;AAHA;AAOA;AACA;AAAA;AACA;AACA;AACA;AAAA;AALA;AAWA;AAAA;AADA;AAIA;AACA;AAAA;AAFA;AAKA;AACA;AACA;AAAA;AAHA;AAMA;AACA;AAAA;AACA;AAHA;AAMA;AAzFA;AA2FA;;;;A","sourceRoot":""}